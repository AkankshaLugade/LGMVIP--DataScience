# -*- coding: utf-8 -*-
"""TASK2_INTERMEDIATE.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1p3FMzjLL-9pV1oeh3M6JMMVLWLgWSa3z

LGMVIP- DATASCIENCE


**Intermediate Level Task**

**Task 2: Prediction using Decision Tree Algorithm**
"""

import pandas as pd
import numpy as np

df=pd.read_csv('iris_csv.csv')
df

df.describe()

df.info()

"""**Data Preprocessing - To convert Categorical Variable**"""

from sklearn.preprocessing import LabelEncoder

from sklearn.compose import ColumnTransformer

LE=LabelEncoder()

df.iloc[:,-1]=LE.fit_transform(df.iloc[:,-1])

df

x=df.iloc[:,:-1]
x.head()

y=df.iloc[:,-1]
y.head()

"""**Splitting The Dataset into Train and Test Split**"""

from sklearn.model_selection import train_test_split

X_train,X_test,y_train,y_test=train_test_split(x,y,test_size=0.20,random_state=50)

X_train.head()

X_train.shape

y_train.shape

"""**Model Building(DT)**"""

from sklearn.tree import DecisionTreeClassifier

dt=DecisionTreeClassifier()

dt.fit(X_train,y_train)

"""**Comparison Between Actual and Predicted Output**"""

y_pred=dt.predict(X_test)
y_pred

y_test=np.array(y_test)
y_test

"""**Accuracy of DT Model**"""

from sklearn.metrics import accuracy_score

accuracy_score(y_pred,y_test)

from sklearn.metrics import confusion_matrix

confusion_matrix(y_pred,y_test)

from sklearn.metrics import classification_report

print(classification_report(y_pred,y_test))

"""**DT Model Visualization**"""

from sklearn import tree
import matplotlib.pyplot as plt

plt.figure(figsize=(20,17))
dtviz=tree.plot_tree(dt,feature_names=x.columns,filled=True,fontsize=20)